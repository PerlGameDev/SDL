
=pod


=head1 NAME

SDL::SMPEG - a SDL perl extension

=head1 CATEGORY

TODO

=head1 SYNOPSIS

  $video = SDL::SMPEG->new( -name => 'pr0n.mpg' );

=head1 DESCRIPTION

C<SDL::SMPEG> adds support for MPEG video to your
SDL Perl application.  SMPEGs are objects bound to
surfaces, whose playback is controlled through the
object's interface.

=head2 METHODS 


=over 4

=item *

C<SDL::SMPEG::error()> returns any error messages associated with playback 

=item * 

C<SDL::SMPEG::audio(bool)> enables or disables audio playback, (on by default)

=item * 

C<SDL::SMPEG::video(bool)> enables or disable video playback, (on by default)

=item * 

C<SDL::SMPEG::loop(bool)> enables or disable playback looping (off by default) 

=item * 

C<SDL::SMPEG::volume(int)> set the volume as per the mixer volume

=item * 

C<SDL::SMPEG:display(surface)> binds the clip to a display surface

=item * 

C<SDL::SMPEG::scale([x,y]|[surface]|int)> scales the clip by either x,y
factors, scales to the image dimensions, or a single scalar.

=item * 

C<SDL::SMPEG::play()> plays the video clip, call C<SDL::SMPEG::display()> before playing

=item * 

C<SDL::SMPEG::pause()> pauses video playback

=item * 

C<SDL::SMPEG::stop()> stops video playback

=item * 

C<SDL::SMPEG::rewind()> resets the clip to the beginning 

=item * 

C<SDL::SMPEG::seek(offset)> seeks to a particular byte offset

=item * 

C<SDL::SMPEG::skip(time)> skips to a particular time

=item * 

C<SDL::SMPEG::region(rect)> takes a SDL::Rect and defines the display area

=item * 

C<SDL::SMPEG::frame(int)> renders a specific frame to the screen

=item * 

C<SDL::SMPEG::info()> returns a new C<SDL::MPEG> object reflecting the current status

=item *

C<SDL::SMPEG::status()> returns either SMPEG_PLAYING or SMPEG_STOPPED or SMPEG_ERROR

=back

=head1 AUTHOR

David J. Goehrig

=head1 SEE ALSO

perl(1) SDL::Surface(3) SDL::MPEG(3)

=cut

